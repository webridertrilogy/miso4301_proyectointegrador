executeQuery( select sequence_name from all_sequences  union select synonym_name   from all_synonyms us, all_sequences asq  where asq.sequence_name = us.table_name    and asq.sequence_owner = us.table_owner) clase   (NewProxyStatement.java)
prepareStatement(insert into auditoria (AU_CEDULA_ESTUDIANTE, AU_CEDULA_ACCION, AU_FECHA_CREACION, PRO_CODIGO, AU_TEXTO_ACCION, AU_TIPO, au_id) values (?, ?, ?, ?, ?, ?, ?)) clase   (AuditoriaHibernateDAO.java)
prepareStatement(select auditoria0_.au_id as au1_0_, auditoria0_.AU_CEDULA_ESTUDIANTE as AU2_0_, auditoria0_.AU_CEDULA_ACCION as AU3_0_, auditoria0_.AU_FECHA_CREACION as AU4_0_, auditoria0_.PRO_CODIGO as PRO5_0_, auditoria0_.AU_TEXTO_ACCION as AU6_0_, auditoria0_.AU_TIPO as AU7_0_ from auditoria auditoria0_ where auditoria0_.AU_FECHA_CREACION>=? and auditoria0_.AU_FECHA_CREACION<=? and auditoria0_.PRO_CODIGO=? order by auditoria0_.AU_FECHA_CREACION DESC) clase   (AuditoriaHibernateDAO.java)
prepareStatement(insert into candidato (CAN_ACEPTA_TERMINOS, CAN_CEDULA, CAN_PREVALIDADOR, CAN_SUPLENTE_CEDULA, CAN_VALIDADOR, CAN_CELULAR, CAN_CIUDAD_CEDULA, CAN_SUPLENTE_CIUDAD_CEDULA, CAN_CODIGO_PROGRAMA, CAN_CON_FALTAS, CAN_CON_GRUPO_INVESTIGACION, CAN_CON_TIEMPO_CONSECUTIVO, CAN_EMAIL_PERSONAL, CAN_EMAIL_UJTL, CAN_ES_AVALADO_DECANO, CAN_ES_NO_CONTRATISTA, CAN_ES_NO_REELEGIDO, CAN_ES_PROFESOR_DPTO, CAN_ES_PROFESOR_VINCULADO, CAN_ESTADO, CAN_FECHA_REGISTRO, CAN_NO_REPETIDO_CC, CAN_NOMBRE, CAN_PROGRAMA, CAN_SUPLENTE_NOMBRE, PRO_CODIGO, CAN_FOTO, CAN_SUPLENTE_RUTA_FOTO, CAN_PROPUESTA, CAN_TIENE_CALIDAD_ESTUDIANTE, CAN_TIENE_MITAD_CREDITOS, CAN_TIENE_PROMEDIO, CAN_TIPO, CAN_TIPO_INSCRIPCION, PRO_YEAR, can_codigo) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)) clase   (CandidatoHibernateDAO.java)
prepareStatement(update candidato set CAN_ACEPTA_TERMINOS=?, CAN_CEDULA=?, CAN_PREVALIDADOR=?, CAN_SUPLENTE_CEDULA=?, CAN_VALIDADOR=?, CAN_CELULAR=?, CAN_CIUDAD_CEDULA=?, CAN_SUPLENTE_CIUDAD_CEDULA=?, CAN_CODIGO_PROGRAMA=?, CAN_CON_FALTAS=?, CAN_CON_GRUPO_INVESTIGACION=?, CAN_CON_TIEMPO_CONSECUTIVO=?, CAN_EMAIL_PERSONAL=?, CAN_EMAIL_UJTL=?, CAN_ES_AVALADO_DECANO=?, CAN_ES_NO_CONTRATISTA=?, CAN_ES_NO_REELEGIDO=?, CAN_ES_PROFESOR_DPTO=?, CAN_ES_PROFESOR_VINCULADO=?, CAN_ESTADO=?, CAN_FECHA_REGISTRO=?, CAN_NO_REPETIDO_CC=?, CAN_NOMBRE=?, CAN_PROGRAMA=?, CAN_SUPLENTE_NOMBRE=?, PRO_CODIGO=?, CAN_FOTO=?, CAN_SUPLENTE_RUTA_FOTO=?, CAN_PROPUESTA=?, CAN_TIENE_CALIDAD_ESTUDIANTE=?, CAN_TIENE_MITAD_CREDITOS=?, CAN_TIENE_PROMEDIO=?, CAN_TIPO=?, CAN_TIPO_INSCRIPCION=?, PRO_YEAR=? where can_codigo=?) clase   (CandidatoHibernateDAO.java)
prepareStatement(select candidato0_.can_codigo as can1_1_, candidato0_.CAN_ACEPTA_TERMINOS as CAN2_1_, candidato0_.CAN_CEDULA as CAN3_1_, candidato0_.CAN_PREVALIDADOR as CAN4_1_, candidato0_.CAN_SUPLENTE_CEDULA as CAN5_1_, candidato0_.CAN_VALIDADOR as CAN6_1_, candidato0_.CAN_CELULAR as CAN7_1_, candidato0_.CAN_CIUDAD_CEDULA as CAN8_1_, candidato0_.CAN_SUPLENTE_CIUDAD_CEDULA as CAN9_1_, candidato0_.CAN_CODIGO_PROGRAMA as CAN10_1_, candidato0_.CAN_CON_FALTAS as CAN11_1_, candidato0_.CAN_CON_GRUPO_INVESTIGACION as CAN12_1_, candidato0_.CAN_CON_TIEMPO_CONSECUTIVO as CAN13_1_, candidato0_.CAN_EMAIL_PERSONAL as CAN14_1_, candidato0_.CAN_EMAIL_UJTL as CAN15_1_, candidato0_.CAN_ES_AVALADO_DECANO as CAN16_1_, candidato0_.CAN_ES_NO_CONTRATISTA as CAN17_1_, candidato0_.CAN_ES_NO_REELEGIDO as CAN18_1_, candidato0_.CAN_ES_PROFESOR_DPTO as CAN19_1_, candidato0_.CAN_ES_PROFESOR_VINCULADO as CAN20_1_, candidato0_.CAN_ESTADO as CAN21_1_, candidato0_.CAN_FECHA_REGISTRO as CAN22_1_, candidato0_.CAN_NO_REPETIDO_CC as CAN23_1_, candidato0_.CAN_NOMBRE as CAN24_1_, candidato0_.CAN_PROGRAMA as CAN25_1_, candidato0_.CAN_SUPLENTE_NOMBRE as CAN26_1_, candidato0_.PRO_CODIGO as PRO27_1_, candidato0_.CAN_FOTO as CAN28_1_, candidato0_.CAN_SUPLENTE_RUTA_FOTO as CAN29_1_, candidato0_.CAN_PROPUESTA as CAN30_1_, candidato0_.CAN_TIENE_CALIDAD_ESTUDIANTE as CAN31_1_, candidato0_.CAN_TIENE_MITAD_CREDITOS as CAN32_1_, candidato0_.CAN_TIENE_PROMEDIO as CAN33_1_, candidato0_.CAN_TIPO as CAN34_1_, candidato0_.CAN_TIPO_INSCRIPCION as CAN35_1_, candidato0_.PRO_YEAR as PRO36_1_ from candidato candidato0_ where candidato0_.PRO_CODIGO=? and (candidato0_.CAN_TIPO_INSCRIPCION=? and candidato0_.CAN_TIPO=? and candidato0_.CAN_ESTADO=? or candidato0_.CAN_TIPO_INSCRIPCION=? and candidato0_.CAN_TIPO=? and candidato0_.CAN_ESTADO=? or candidato0_.CAN_TIPO_INSCRIPCION=? and candidato0_.CAN_TIPO=? and candidato0_.CAN_ESTADO=?) and candidato0_.CAN_CEDULA<>'-1' order by candidato0_.CAN_TIPO_INSCRIPCION, candidato0_.CAN_PROGRAMA, candidato0_.CAN_TIPO, candidato0_.CAN_NOMBRE) clase   (CandidatoHibernateDAO.java)
prepareStatement(select ca.* from candidato ca  inner join secretaria_programa sp ON sp.identificacion = ? AND (sp.rol = 'SA' OR sp.rol = 'DP')  inner join ma_relacion_cencost ma ON ma.rce_titular = sp.cod_centro_costo  where   (ca.can_codigo_programa = ma.rce_asociado or ca.can_codigo_programa = ma.cod_centro_costo )  and ca.pro_codigo = ?   and ca.can_tipo_inscripcion = ? and ca.can_cedula != '-1'  and (ca.can_tipo = ? or ca.can_tipo = ?)  and ca.can_estado = ? ) clase   (CandidatoHibernateDAO.java)
prepareStatement(insert into candidato (CAN_ACEPTA_TERMINOS, CAN_CEDULA, CAN_PREVALIDADOR, CAN_SUPLENTE_CEDULA, CAN_VALIDADOR, CAN_CELULAR, CAN_CIUDAD_CEDULA, CAN_SUPLENTE_CIUDAD_CEDULA, CAN_CODIGO_PROGRAMA, CAN_CON_FALTAS, CAN_CON_GRUPO_INVESTIGACION, CAN_CON_TIEMPO_CONSECUTIVO, CAN_EMAIL_PERSONAL, CAN_EMAIL_UJTL, CAN_ES_AVALADO_DECANO, CAN_ES_NO_CONTRATISTA, CAN_ES_NO_REELEGIDO, CAN_ES_PROFESOR_DPTO, CAN_ES_PROFESOR_VINCULADO, CAN_ESTADO, CAN_FECHA_REGISTRO, CAN_NO_REPETIDO_CC, CAN_NOMBRE, CAN_PROGRAMA, CAN_SUPLENTE_NOMBRE, PRO_CODIGO, CAN_FOTO, CAN_SUPLENTE_RUTA_FOTO, CAN_PROPUESTA, CAN_TIENE_CALIDAD_ESTUDIANTE, CAN_TIENE_MITAD_CREDITOS, CAN_TIENE_PROMEDIO, CAN_TIPO, CAN_TIPO_INSCRIPCION, PRO_YEAR, can_codigo) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)) clase   (CandidatoHibernateDAO.java)
prepareStatement(update candidato set CAN_ACEPTA_TERMINOS=?, CAN_CEDULA=?, CAN_PREVALIDADOR=?, CAN_SUPLENTE_CEDULA=?, CAN_VALIDADOR=?, CAN_CELULAR=?, CAN_CIUDAD_CEDULA=?, CAN_SUPLENTE_CIUDAD_CEDULA=?, CAN_CODIGO_PROGRAMA=?, CAN_CON_FALTAS=?, CAN_CON_GRUPO_INVESTIGACION=?, CAN_CON_TIEMPO_CONSECUTIVO=?, CAN_EMAIL_PERSONAL=?, CAN_EMAIL_UJTL=?, CAN_ES_AVALADO_DECANO=?, CAN_ES_NO_CONTRATISTA=?, CAN_ES_NO_REELEGIDO=?, CAN_ES_PROFESOR_DPTO=?, CAN_ES_PROFESOR_VINCULADO=?, CAN_ESTADO=?, CAN_FECHA_REGISTRO=?, CAN_NO_REPETIDO_CC=?, CAN_NOMBRE=?, CAN_PROGRAMA=?, CAN_SUPLENTE_NOMBRE=?, PRO_CODIGO=?, CAN_FOTO=?, CAN_SUPLENTE_RUTA_FOTO=?, CAN_PROPUESTA=?, CAN_TIENE_CALIDAD_ESTUDIANTE=?, CAN_TIENE_MITAD_CREDITOS=?, CAN_TIENE_PROMEDIO=?, CAN_TIPO=?, CAN_TIPO_INSCRIPCION=?, PRO_YEAR=? where can_codigo=?) clase   (CandidatoHibernateDAO.java)
prepareStatement(select candidato0_.can_codigo as can1_1_, candidato0_.CAN_ACEPTA_TERMINOS as CAN2_1_, candidato0_.CAN_CEDULA as CAN3_1_, candidato0_.CAN_PREVALIDADOR as CAN4_1_, candidato0_.CAN_SUPLENTE_CEDULA as CAN5_1_, candidato0_.CAN_VALIDADOR as CAN6_1_, candidato0_.CAN_CELULAR as CAN7_1_, candidato0_.CAN_CIUDAD_CEDULA as CAN8_1_, candidato0_.CAN_SUPLENTE_CIUDAD_CEDULA as CAN9_1_, candidato0_.CAN_CODIGO_PROGRAMA as CAN10_1_, candidato0_.CAN_CON_FALTAS as CAN11_1_, candidato0_.CAN_CON_GRUPO_INVESTIGACION as CAN12_1_, candidato0_.CAN_CON_TIEMPO_CONSECUTIVO as CAN13_1_, candidato0_.CAN_EMAIL_PERSONAL as CAN14_1_, candidato0_.CAN_EMAIL_UJTL as CAN15_1_, candidato0_.CAN_ES_AVALADO_DECANO as CAN16_1_, candidato0_.CAN_ES_NO_CONTRATISTA as CAN17_1_, candidato0_.CAN_ES_NO_REELEGIDO as CAN18_1_, candidato0_.CAN_ES_PROFESOR_DPTO as CAN19_1_, candidato0_.CAN_ES_PROFESOR_VINCULADO as CAN20_1_, candidato0_.CAN_ESTADO as CAN21_1_, candidato0_.CAN_FECHA_REGISTRO as CAN22_1_, candidato0_.CAN_NO_REPETIDO_CC as CAN23_1_, candidato0_.CAN_NOMBRE as CAN24_1_, candidato0_.CAN_PROGRAMA as CAN25_1_, candidato0_.CAN_SUPLENTE_NOMBRE as CAN26_1_, candidato0_.PRO_CODIGO as PRO27_1_, candidato0_.CAN_FOTO as CAN28_1_, candidato0_.CAN_SUPLENTE_RUTA_FOTO as CAN29_1_, candidato0_.CAN_PROPUESTA as CAN30_1_, candidato0_.CAN_TIENE_CALIDAD_ESTUDIANTE as CAN31_1_, candidato0_.CAN_TIENE_MITAD_CREDITOS as CAN32_1_, candidato0_.CAN_TIENE_PROMEDIO as CAN33_1_, candidato0_.CAN_TIPO as CAN34_1_, candidato0_.CAN_TIPO_INSCRIPCION as CAN35_1_, candidato0_.PRO_YEAR as PRO36_1_ from candidato candidato0_ where candidato0_.PRO_CODIGO=? and candidato0_.CAN_CEDULA<>'-1' and (candidato0_.CAN_ESTADO=? or candidato0_.CAN_ESTADO=?) order by candidato0_.CAN_TIPO_INSCRIPCION, candidato0_.CAN_PROGRAMA, candidato0_.CAN_TIPO, candidato0_.CAN_NOMBRE) clase   (CandidatoHibernateDAO.java)
prepareStatement(update candidato set CAN_ACEPTA_TERMINOS=?, CAN_CEDULA=?, CAN_PREVALIDADOR=?, CAN_SUPLENTE_CEDULA=?, CAN_VALIDADOR=?, CAN_CELULAR=?, CAN_CIUDAD_CEDULA=?, CAN_SUPLENTE_CIUDAD_CEDULA=?, CAN_CODIGO_PROGRAMA=?, CAN_CON_FALTAS=?, CAN_CON_GRUPO_INVESTIGACION=?, CAN_CON_TIEMPO_CONSECUTIVO=?, CAN_EMAIL_PERSONAL=?, CAN_EMAIL_UJTL=?, CAN_ES_AVALADO_DECANO=?, CAN_ES_NO_CONTRATISTA=?, CAN_ES_NO_REELEGIDO=?, CAN_ES_PROFESOR_DPTO=?, CAN_ES_PROFESOR_VINCULADO=?, CAN_ESTADO=?, CAN_FECHA_REGISTRO=?, CAN_NO_REPETIDO_CC=?, CAN_NOMBRE=?, CAN_PROGRAMA=?, CAN_SUPLENTE_NOMBRE=?, PRO_CODIGO=?, CAN_FOTO=?, CAN_SUPLENTE_RUTA_FOTO=?, CAN_PROPUESTA=?, CAN_TIENE_CALIDAD_ESTUDIANTE=?, CAN_TIENE_MITAD_CREDITOS=?, CAN_TIENE_PROMEDIO=?, CAN_TIPO=?, CAN_TIPO_INSCRIPCION=?, PRO_YEAR=? where can_codigo=?) clase   (CandidatoHibernateDAO.java)
prepareStatement(select candidato0_.can_codigo as can1_1_, candidato0_.CAN_ACEPTA_TERMINOS as CAN2_1_, candidato0_.CAN_CEDULA as CAN3_1_, candidato0_.CAN_PREVALIDADOR as CAN4_1_, candidato0_.CAN_SUPLENTE_CEDULA as CAN5_1_, candidato0_.CAN_VALIDADOR as CAN6_1_, candidato0_.CAN_CELULAR as CAN7_1_, candidato0_.CAN_CIUDAD_CEDULA as CAN8_1_, candidato0_.CAN_SUPLENTE_CIUDAD_CEDULA as CAN9_1_, candidato0_.CAN_CODIGO_PROGRAMA as CAN10_1_, candidato0_.CAN_CON_FALTAS as CAN11_1_, candidato0_.CAN_CON_GRUPO_INVESTIGACION as CAN12_1_, candidato0_.CAN_CON_TIEMPO_CONSECUTIVO as CAN13_1_, candidato0_.CAN_EMAIL_PERSONAL as CAN14_1_, candidato0_.CAN_EMAIL_UJTL as CAN15_1_, candidato0_.CAN_ES_AVALADO_DECANO as CAN16_1_, candidato0_.CAN_ES_NO_CONTRATISTA as CAN17_1_, candidato0_.CAN_ES_NO_REELEGIDO as CAN18_1_, candidato0_.CAN_ES_PROFESOR_DPTO as CAN19_1_, candidato0_.CAN_ES_PROFESOR_VINCULADO as CAN20_1_, candidato0_.CAN_ESTADO as CAN21_1_, candidato0_.CAN_FECHA_REGISTRO as CAN22_1_, candidato0_.CAN_NO_REPETIDO_CC as CAN23_1_, candidato0_.CAN_NOMBRE as CAN24_1_, candidato0_.CAN_PROGRAMA as CAN25_1_, candidato0_.CAN_SUPLENTE_NOMBRE as CAN26_1_, candidato0_.PRO_CODIGO as PRO27_1_, candidato0_.CAN_FOTO as CAN28_1_, candidato0_.CAN_SUPLENTE_RUTA_FOTO as CAN29_1_, candidato0_.CAN_PROPUESTA as CAN30_1_, candidato0_.CAN_TIENE_CALIDAD_ESTUDIANTE as CAN31_1_, candidato0_.CAN_TIENE_MITAD_CREDITOS as CAN32_1_, candidato0_.CAN_TIENE_PROMEDIO as CAN33_1_, candidato0_.CAN_TIPO as CAN34_1_, candidato0_.CAN_TIPO_INSCRIPCION as CAN35_1_, candidato0_.PRO_YEAR as PRO36_1_ from candidato candidato0_ where candidato0_.PRO_CODIGO=? and candidato0_.CAN_CEDULA<>'-1' and (candidato0_.CAN_ESTADO=? or candidato0_.CAN_ESTADO=?) order by candidato0_.CAN_TIPO_INSCRIPCION, candidato0_.CAN_PROGRAMA, candidato0_.CAN_TIPO, candidato0_.CAN_NOMBRE) clase   (CandidatoHibernateDAO.java)
prepareStatement(update candidato set CAN_ACEPTA_TERMINOS=?, CAN_CEDULA=?, CAN_PREVALIDADOR=?, CAN_SUPLENTE_CEDULA=?, CAN_VALIDADOR=?, CAN_CELULAR=?, CAN_CIUDAD_CEDULA=?, CAN_SUPLENTE_CIUDAD_CEDULA=?, CAN_CODIGO_PROGRAMA=?, CAN_CON_FALTAS=?, CAN_CON_GRUPO_INVESTIGACION=?, CAN_CON_TIEMPO_CONSECUTIVO=?, CAN_EMAIL_PERSONAL=?, CAN_EMAIL_UJTL=?, CAN_ES_AVALADO_DECANO=?, CAN_ES_NO_CONTRATISTA=?, CAN_ES_NO_REELEGIDO=?, CAN_ES_PROFESOR_DPTO=?, CAN_ES_PROFESOR_VINCULADO=?, CAN_ESTADO=?, CAN_FECHA_REGISTRO=?, CAN_NO_REPETIDO_CC=?, CAN_NOMBRE=?, CAN_PROGRAMA=?, CAN_SUPLENTE_NOMBRE=?, PRO_CODIGO=?, CAN_FOTO=?, CAN_SUPLENTE_RUTA_FOTO=?, CAN_PROPUESTA=?, CAN_TIENE_CALIDAD_ESTUDIANTE=?, CAN_TIENE_MITAD_CREDITOS=?, CAN_TIENE_PROMEDIO=?, CAN_TIPO=?, CAN_TIPO_INSCRIPCION=?, PRO_YEAR=? where can_codigo=?) clase   (CandidatoHibernateDAO.java)
prepareStatement(select candidato0_.can_codigo as can1_1_, candidato0_.CAN_ACEPTA_TERMINOS as CAN2_1_, candidato0_.CAN_CEDULA as CAN3_1_, candidato0_.CAN_PREVALIDADOR as CAN4_1_, candidato0_.CAN_SUPLENTE_CEDULA as CAN5_1_, candidato0_.CAN_VALIDADOR as CAN6_1_, candidato0_.CAN_CELULAR as CAN7_1_, candidato0_.CAN_CIUDAD_CEDULA as CAN8_1_, candidato0_.CAN_SUPLENTE_CIUDAD_CEDULA as CAN9_1_, candidato0_.CAN_CODIGO_PROGRAMA as CAN10_1_, candidato0_.CAN_CON_FALTAS as CAN11_1_, candidato0_.CAN_CON_GRUPO_INVESTIGACION as CAN12_1_, candidato0_.CAN_CON_TIEMPO_CONSECUTIVO as CAN13_1_, candidato0_.CAN_EMAIL_PERSONAL as CAN14_1_, candidato0_.CAN_EMAIL_UJTL as CAN15_1_, candidato0_.CAN_ES_AVALADO_DECANO as CAN16_1_, candidato0_.CAN_ES_NO_CONTRATISTA as CAN17_1_, candidato0_.CAN_ES_NO_REELEGIDO as CAN18_1_, candidato0_.CAN_ES_PROFESOR_DPTO as CAN19_1_, candidato0_.CAN_ES_PROFESOR_VINCULADO as CAN20_1_, candidato0_.CAN_ESTADO as CAN21_1_, candidato0_.CAN_FECHA_REGISTRO as CAN22_1_, candidato0_.CAN_NO_REPETIDO_CC as CAN23_1_, candidato0_.CAN_NOMBRE as CAN24_1_, candidato0_.CAN_PROGRAMA as CAN25_1_, candidato0_.CAN_SUPLENTE_NOMBRE as CAN26_1_, candidato0_.PRO_CODIGO as PRO27_1_, candidato0_.CAN_FOTO as CAN28_1_, candidato0_.CAN_SUPLENTE_RUTA_FOTO as CAN29_1_, candidato0_.CAN_PROPUESTA as CAN30_1_, candidato0_.CAN_TIENE_CALIDAD_ESTUDIANTE as CAN31_1_, candidato0_.CAN_TIENE_MITAD_CREDITOS as CAN32_1_, candidato0_.CAN_TIENE_PROMEDIO as CAN33_1_, candidato0_.CAN_TIPO as CAN34_1_, candidato0_.CAN_TIPO_INSCRIPCION as CAN35_1_, candidato0_.PRO_YEAR as PRO36_1_ from candidato candidato0_ where candidato0_.PRO_CODIGO=? and candidato0_.CAN_CEDULA<>'-1' and (candidato0_.CAN_ESTADO=? or candidato0_.CAN_ESTADO=?) order by candidato0_.CAN_TIPO_INSCRIPCION, candidato0_.CAN_PROGRAMA, candidato0_.CAN_TIPO, candidato0_.CAN_NOMBRE) clase   (CandidatoHibernateDAO.java)
prepareStatement(insert into candidato (CAN_ACEPTA_TERMINOS, CAN_CEDULA, CAN_PREVALIDADOR, CAN_SUPLENTE_CEDULA, CAN_VALIDADOR, CAN_CELULAR, CAN_CIUDAD_CEDULA, CAN_SUPLENTE_CIUDAD_CEDULA, CAN_CODIGO_PROGRAMA, CAN_CON_FALTAS, CAN_CON_GRUPO_INVESTIGACION, CAN_CON_TIEMPO_CONSECUTIVO, CAN_EMAIL_PERSONAL, CAN_EMAIL_UJTL, CAN_ES_AVALADO_DECANO, CAN_ES_NO_CONTRATISTA, CAN_ES_NO_REELEGIDO, CAN_ES_PROFESOR_DPTO, CAN_ES_PROFESOR_VINCULADO, CAN_ESTADO, CAN_FECHA_REGISTRO, CAN_NO_REPETIDO_CC, CAN_NOMBRE, CAN_PROGRAMA, CAN_SUPLENTE_NOMBRE, PRO_CODIGO, CAN_FOTO, CAN_SUPLENTE_RUTA_FOTO, CAN_PROPUESTA, CAN_TIENE_CALIDAD_ESTUDIANTE, CAN_TIENE_MITAD_CREDITOS, CAN_TIENE_PROMEDIO, CAN_TIPO, CAN_TIPO_INSCRIPCION, PRO_YEAR, can_codigo) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)) clase   (CandidatoHibernateDAO.java)
prepareStatement(update candidato set CAN_ACEPTA_TERMINOS=?, CAN_CEDULA=?, CAN_PREVALIDADOR=?, CAN_SUPLENTE_CEDULA=?, CAN_VALIDADOR=?, CAN_CELULAR=?, CAN_CIUDAD_CEDULA=?, CAN_SUPLENTE_CIUDAD_CEDULA=?, CAN_CODIGO_PROGRAMA=?, CAN_CON_FALTAS=?, CAN_CON_GRUPO_INVESTIGACION=?, CAN_CON_TIEMPO_CONSECUTIVO=?, CAN_EMAIL_PERSONAL=?, CAN_EMAIL_UJTL=?, CAN_ES_AVALADO_DECANO=?, CAN_ES_NO_CONTRATISTA=?, CAN_ES_NO_REELEGIDO=?, CAN_ES_PROFESOR_DPTO=?, CAN_ES_PROFESOR_VINCULADO=?, CAN_ESTADO=?, CAN_FECHA_REGISTRO=?, CAN_NO_REPETIDO_CC=?, CAN_NOMBRE=?, CAN_PROGRAMA=?, CAN_SUPLENTE_NOMBRE=?, PRO_CODIGO=?, CAN_FOTO=?, CAN_SUPLENTE_RUTA_FOTO=?, CAN_PROPUESTA=?, CAN_TIENE_CALIDAD_ESTUDIANTE=?, CAN_TIENE_MITAD_CREDITOS=?, CAN_TIENE_PROMEDIO=?, CAN_TIPO=?, CAN_TIPO_INSCRIPCION=?, PRO_YEAR=? where can_codigo=?) clase   (CandidatoHibernateDAO.java)
prepareStatement( select * from candidato  where pro_codigo = ?  and can_estado = 'SG'  and can_cedula <> '-1'  order by can_tipo_inscripcion, can_tipo desc, can_programa) clase   (CandidatoHibernateDAO.java)
prepareStatement(select candidato0_.can_codigo as can1_1_, candidato0_.CAN_ACEPTA_TERMINOS as CAN2_1_, candidato0_.CAN_CEDULA as CAN3_1_, candidato0_.CAN_PREVALIDADOR as CAN4_1_, candidato0_.CAN_SUPLENTE_CEDULA as CAN5_1_, candidato0_.CAN_VALIDADOR as CAN6_1_, candidato0_.CAN_CELULAR as CAN7_1_, candidato0_.CAN_CIUDAD_CEDULA as CAN8_1_, candidato0_.CAN_SUPLENTE_CIUDAD_CEDULA as CAN9_1_, candidato0_.CAN_CODIGO_PROGRAMA as CAN10_1_, candidato0_.CAN_CON_FALTAS as CAN11_1_, candidato0_.CAN_CON_GRUPO_INVESTIGACION as CAN12_1_, candidato0_.CAN_CON_TIEMPO_CONSECUTIVO as CAN13_1_, candidato0_.CAN_EMAIL_PERSONAL as CAN14_1_, candidato0_.CAN_EMAIL_UJTL as CAN15_1_, candidato0_.CAN_ES_AVALADO_DECANO as CAN16_1_, candidato0_.CAN_ES_NO_CONTRATISTA as CAN17_1_, candidato0_.CAN_ES_NO_REELEGIDO as CAN18_1_, candidato0_.CAN_ES_PROFESOR_DPTO as CAN19_1_, candidato0_.CAN_ES_PROFESOR_VINCULADO as CAN20_1_, candidato0_.CAN_ESTADO as CAN21_1_, candidato0_.CAN_FECHA_REGISTRO as CAN22_1_, candidato0_.CAN_NO_REPETIDO_CC as CAN23_1_, candidato0_.CAN_NOMBRE as CAN24_1_, candidato0_.CAN_PROGRAMA as CAN25_1_, candidato0_.CAN_SUPLENTE_NOMBRE as CAN26_1_, candidato0_.PRO_CODIGO as PRO27_1_, candidato0_.CAN_FOTO as CAN28_1_, candidato0_.CAN_SUPLENTE_RUTA_FOTO as CAN29_1_, candidato0_.CAN_PROPUESTA as CAN30_1_, candidato0_.CAN_TIENE_CALIDAD_ESTUDIANTE as CAN31_1_, candidato0_.CAN_TIENE_MITAD_CREDITOS as CAN32_1_, candidato0_.CAN_TIENE_PROMEDIO as CAN33_1_, candidato0_.CAN_TIPO as CAN34_1_, candidato0_.CAN_TIPO_INSCRIPCION as CAN35_1_, candidato0_.PRO_YEAR as PRO36_1_ from candidato candidato0_ where candidato0_.PRO_CODIGO=? and candidato0_.CAN_ESTADO=? and candidato0_.CAN_TIPO_INSCRIPCION=? and candidato0_.CAN_TIPO=? order by candidato0_.CAN_TIPO_INSCRIPCION, candidato0_.CAN_PROGRAMA, candidato0_.CAN_TIPO, candidato0_.CAN_NOMBRE) clase   (CandidatoHibernateDAO.java)
prepareStatement(insert into candidato (CAN_ACEPTA_TERMINOS, CAN_CEDULA, CAN_PREVALIDADOR, CAN_SUPLENTE_CEDULA, CAN_VALIDADOR, CAN_CELULAR, CAN_CIUDAD_CEDULA, CAN_SUPLENTE_CIUDAD_CEDULA, CAN_CODIGO_PROGRAMA, CAN_CON_FALTAS, CAN_CON_GRUPO_INVESTIGACION, CAN_CON_TIEMPO_CONSECUTIVO, CAN_EMAIL_PERSONAL, CAN_EMAIL_UJTL, CAN_ES_AVALADO_DECANO, CAN_ES_NO_CONTRATISTA, CAN_ES_NO_REELEGIDO, CAN_ES_PROFESOR_DPTO, CAN_ES_PROFESOR_VINCULADO, CAN_ESTADO, CAN_FECHA_REGISTRO, CAN_NO_REPETIDO_CC, CAN_NOMBRE, CAN_PROGRAMA, CAN_SUPLENTE_NOMBRE, PRO_CODIGO, CAN_FOTO, CAN_SUPLENTE_RUTA_FOTO, CAN_PROPUESTA, CAN_TIENE_CALIDAD_ESTUDIANTE, CAN_TIENE_MITAD_CREDITOS, CAN_TIENE_PROMEDIO, CAN_TIPO, CAN_TIPO_INSCRIPCION, PRO_YEAR, can_codigo) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)) clase   (CandidatoHibernateDAO.java)
prepareStatement(update candidato set CAN_ACEPTA_TERMINOS=?, CAN_CEDULA=?, CAN_PREVALIDADOR=?, CAN_SUPLENTE_CEDULA=?, CAN_VALIDADOR=?, CAN_CELULAR=?, CAN_CIUDAD_CEDULA=?, CAN_SUPLENTE_CIUDAD_CEDULA=?, CAN_CODIGO_PROGRAMA=?, CAN_CON_FALTAS=?, CAN_CON_GRUPO_INVESTIGACION=?, CAN_CON_TIEMPO_CONSECUTIVO=?, CAN_EMAIL_PERSONAL=?, CAN_EMAIL_UJTL=?, CAN_ES_AVALADO_DECANO=?, CAN_ES_NO_CONTRATISTA=?, CAN_ES_NO_REELEGIDO=?, CAN_ES_PROFESOR_DPTO=?, CAN_ES_PROFESOR_VINCULADO=?, CAN_ESTADO=?, CAN_FECHA_REGISTRO=?, CAN_NO_REPETIDO_CC=?, CAN_NOMBRE=?, CAN_PROGRAMA=?, CAN_SUPLENTE_NOMBRE=?, PRO_CODIGO=?, CAN_FOTO=?, CAN_SUPLENTE_RUTA_FOTO=?, CAN_PROPUESTA=?, CAN_TIENE_CALIDAD_ESTUDIANTE=?, CAN_TIENE_MITAD_CREDITOS=?, CAN_TIENE_PROMEDIO=?, CAN_TIPO=?, CAN_TIPO_INSCRIPCION=?, PRO_YEAR=? where can_codigo=?) clase   (CandidatoHibernateDAO.java)
prepareStatement(select candidato0_.can_codigo as can1_1_, candidato0_.CAN_ACEPTA_TERMINOS as CAN2_1_, candidato0_.CAN_CEDULA as CAN3_1_, candidato0_.CAN_PREVALIDADOR as CAN4_1_, candidato0_.CAN_SUPLENTE_CEDULA as CAN5_1_, candidato0_.CAN_VALIDADOR as CAN6_1_, candidato0_.CAN_CELULAR as CAN7_1_, candidato0_.CAN_CIUDAD_CEDULA as CAN8_1_, candidato0_.CAN_SUPLENTE_CIUDAD_CEDULA as CAN9_1_, candidato0_.CAN_CODIGO_PROGRAMA as CAN10_1_, candidato0_.CAN_CON_FALTAS as CAN11_1_, candidato0_.CAN_CON_GRUPO_INVESTIGACION as CAN12_1_, candidato0_.CAN_CON_TIEMPO_CONSECUTIVO as CAN13_1_, candidato0_.CAN_EMAIL_PERSONAL as CAN14_1_, candidato0_.CAN_EMAIL_UJTL as CAN15_1_, candidato0_.CAN_ES_AVALADO_DECANO as CAN16_1_, candidato0_.CAN_ES_NO_CONTRATISTA as CAN17_1_, candidato0_.CAN_ES_NO_REELEGIDO as CAN18_1_, candidato0_.CAN_ES_PROFESOR_DPTO as CAN19_1_, candidato0_.CAN_ES_PROFESOR_VINCULADO as CAN20_1_, candidato0_.CAN_ESTADO as CAN21_1_, candidato0_.CAN_FECHA_REGISTRO as CAN22_1_, candidato0_.CAN_NO_REPETIDO_CC as CAN23_1_, candidato0_.CAN_NOMBRE as CAN24_1_, candidato0_.CAN_PROGRAMA as CAN25_1_, candidato0_.CAN_SUPLENTE_NOMBRE as CAN26_1_, candidato0_.PRO_CODIGO as PRO27_1_, candidato0_.CAN_FOTO as CAN28_1_, candidato0_.CAN_SUPLENTE_RUTA_FOTO as CAN29_1_, candidato0_.CAN_PROPUESTA as CAN30_1_, candidato0_.CAN_TIENE_CALIDAD_ESTUDIANTE as CAN31_1_, candidato0_.CAN_TIENE_MITAD_CREDITOS as CAN32_1_, candidato0_.CAN_TIENE_PROMEDIO as CAN33_1_, candidato0_.CAN_TIPO as CAN34_1_, candidato0_.CAN_TIPO_INSCRIPCION as CAN35_1_, candidato0_.PRO_YEAR as PRO36_1_ from candidato candidato0_ where candidato0_.PRO_CODIGO=? and candidato0_.CAN_TIPO_INSCRIPCION=? and candidato0_.CAN_TIPO=? and candidato0_.CAN_ESTADO=? order by candidato0_.CAN_CEDULA ASC) clase   (CandidatoHibernateDAO.java)
prepareStatement(insert into candidato (CAN_ACEPTA_TERMINOS, CAN_CEDULA, CAN_PREVALIDADOR, CAN_SUPLENTE_CEDULA, CAN_VALIDADOR, CAN_CELULAR, CAN_CIUDAD_CEDULA, CAN_SUPLENTE_CIUDAD_CEDULA, CAN_CODIGO_PROGRAMA, CAN_CON_FALTAS, CAN_CON_GRUPO_INVESTIGACION, CAN_CON_TIEMPO_CONSECUTIVO, CAN_EMAIL_PERSONAL, CAN_EMAIL_UJTL, CAN_ES_AVALADO_DECANO, CAN_ES_NO_CONTRATISTA, CAN_ES_NO_REELEGIDO, CAN_ES_PROFESOR_DPTO, CAN_ES_PROFESOR_VINCULADO, CAN_ESTADO, CAN_FECHA_REGISTRO, CAN_NO_REPETIDO_CC, CAN_NOMBRE, CAN_PROGRAMA, CAN_SUPLENTE_NOMBRE, PRO_CODIGO, CAN_FOTO, CAN_SUPLENTE_RUTA_FOTO, CAN_PROPUESTA, CAN_TIENE_CALIDAD_ESTUDIANTE, CAN_TIENE_MITAD_CREDITOS, CAN_TIENE_PROMEDIO, CAN_TIPO, CAN_TIPO_INSCRIPCION, PRO_YEAR, can_codigo) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)) clase   (CandidatoHibernateDAO.java)
prepareStatement(update candidato set CAN_ACEPTA_TERMINOS=?, CAN_CEDULA=?, CAN_PREVALIDADOR=?, CAN_SUPLENTE_CEDULA=?, CAN_VALIDADOR=?, CAN_CELULAR=?, CAN_CIUDAD_CEDULA=?, CAN_SUPLENTE_CIUDAD_CEDULA=?, CAN_CODIGO_PROGRAMA=?, CAN_CON_FALTAS=?, CAN_CON_GRUPO_INVESTIGACION=?, CAN_CON_TIEMPO_CONSECUTIVO=?, CAN_EMAIL_PERSONAL=?, CAN_EMAIL_UJTL=?, CAN_ES_AVALADO_DECANO=?, CAN_ES_NO_CONTRATISTA=?, CAN_ES_NO_REELEGIDO=?, CAN_ES_PROFESOR_DPTO=?, CAN_ES_PROFESOR_VINCULADO=?, CAN_ESTADO=?, CAN_FECHA_REGISTRO=?, CAN_NO_REPETIDO_CC=?, CAN_NOMBRE=?, CAN_PROGRAMA=?, CAN_SUPLENTE_NOMBRE=?, PRO_CODIGO=?, CAN_FOTO=?, CAN_SUPLENTE_RUTA_FOTO=?, CAN_PROPUESTA=?, CAN_TIENE_CALIDAD_ESTUDIANTE=?, CAN_TIENE_MITAD_CREDITOS=?, CAN_TIENE_PROMEDIO=?, CAN_TIPO=?, CAN_TIPO_INSCRIPCION=?, PRO_YEAR=? where can_codigo=?) clase   (CandidatoHibernateDAO.java)
prepareStatement(select candidato0_.can_codigo as can1_1_, candidato0_.CAN_ACEPTA_TERMINOS as CAN2_1_, candidato0_.CAN_CEDULA as CAN3_1_, candidato0_.CAN_PREVALIDADOR as CAN4_1_, candidato0_.CAN_SUPLENTE_CEDULA as CAN5_1_, candidato0_.CAN_VALIDADOR as CAN6_1_, candidato0_.CAN_CELULAR as CAN7_1_, candidato0_.CAN_CIUDAD_CEDULA as CAN8_1_, candidato0_.CAN_SUPLENTE_CIUDAD_CEDULA as CAN9_1_, candidato0_.CAN_CODIGO_PROGRAMA as CAN10_1_, candidato0_.CAN_CON_FALTAS as CAN11_1_, candidato0_.CAN_CON_GRUPO_INVESTIGACION as CAN12_1_, candidato0_.CAN_CON_TIEMPO_CONSECUTIVO as CAN13_1_, candidato0_.CAN_EMAIL_PERSONAL as CAN14_1_, candidato0_.CAN_EMAIL_UJTL as CAN15_1_, candidato0_.CAN_ES_AVALADO_DECANO as CAN16_1_, candidato0_.CAN_ES_NO_CONTRATISTA as CAN17_1_, candidato0_.CAN_ES_NO_REELEGIDO as CAN18_1_, candidato0_.CAN_ES_PROFESOR_DPTO as CAN19_1_, candidato0_.CAN_ES_PROFESOR_VINCULADO as CAN20_1_, candidato0_.CAN_ESTADO as CAN21_1_, candidato0_.CAN_FECHA_REGISTRO as CAN22_1_, candidato0_.CAN_NO_REPETIDO_CC as CAN23_1_, candidato0_.CAN_NOMBRE as CAN24_1_, candidato0_.CAN_PROGRAMA as CAN25_1_, candidato0_.CAN_SUPLENTE_NOMBRE as CAN26_1_, candidato0_.PRO_CODIGO as PRO27_1_, candidato0_.CAN_FOTO as CAN28_1_, candidato0_.CAN_SUPLENTE_RUTA_FOTO as CAN29_1_, candidato0_.CAN_PROPUESTA as CAN30_1_, candidato0_.CAN_TIENE_CALIDAD_ESTUDIANTE as CAN31_1_, candidato0_.CAN_TIENE_MITAD_CREDITOS as CAN32_1_, candidato0_.CAN_TIENE_PROMEDIO as CAN33_1_, candidato0_.CAN_TIPO as CAN34_1_, candidato0_.CAN_TIPO_INSCRIPCION as CAN35_1_, candidato0_.PRO_YEAR as PRO36_1_ from candidato candidato0_ where candidato0_.PRO_CODIGO=? and candidato0_.CAN_TIPO_INSCRIPCION=? and candidato0_.CAN_TIPO=? and candidato0_.CAN_CODIGO_PROGRAMA=? and candidato0_.CAN_ESTADO=? order by candidato0_.CAN_CEDULA ASC) clase   (CandidatoHibernateDAO.java)
prepareStatement(insert into candidato (CAN_ACEPTA_TERMINOS, CAN_CEDULA, CAN_PREVALIDADOR, CAN_SUPLENTE_CEDULA, CAN_VALIDADOR, CAN_CELULAR, CAN_CIUDAD_CEDULA, CAN_SUPLENTE_CIUDAD_CEDULA, CAN_CODIGO_PROGRAMA, CAN_CON_FALTAS, CAN_CON_GRUPO_INVESTIGACION, CAN_CON_TIEMPO_CONSECUTIVO, CAN_EMAIL_PERSONAL, CAN_EMAIL_UJTL, CAN_ES_AVALADO_DECANO, CAN_ES_NO_CONTRATISTA, CAN_ES_NO_REELEGIDO, CAN_ES_PROFESOR_DPTO, CAN_ES_PROFESOR_VINCULADO, CAN_ESTADO, CAN_FECHA_REGISTRO, CAN_NO_REPETIDO_CC, CAN_NOMBRE, CAN_PROGRAMA, CAN_SUPLENTE_NOMBRE, PRO_CODIGO, CAN_FOTO, CAN_SUPLENTE_RUTA_FOTO, CAN_PROPUESTA, CAN_TIENE_CALIDAD_ESTUDIANTE, CAN_TIENE_MITAD_CREDITOS, CAN_TIENE_PROMEDIO, CAN_TIPO, CAN_TIPO_INSCRIPCION, PRO_YEAR, can_codigo) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)) clase   (CandidatoHibernateDAO.java)
prepareStatement(update candidato set CAN_ACEPTA_TERMINOS=?, CAN_CEDULA=?, CAN_PREVALIDADOR=?, CAN_SUPLENTE_CEDULA=?, CAN_VALIDADOR=?, CAN_CELULAR=?, CAN_CIUDAD_CEDULA=?, CAN_SUPLENTE_CIUDAD_CEDULA=?, CAN_CODIGO_PROGRAMA=?, CAN_CON_FALTAS=?, CAN_CON_GRUPO_INVESTIGACION=?, CAN_CON_TIEMPO_CONSECUTIVO=?, CAN_EMAIL_PERSONAL=?, CAN_EMAIL_UJTL=?, CAN_ES_AVALADO_DECANO=?, CAN_ES_NO_CONTRATISTA=?, CAN_ES_NO_REELEGIDO=?, CAN_ES_PROFESOR_DPTO=?, CAN_ES_PROFESOR_VINCULADO=?, CAN_ESTADO=?, CAN_FECHA_REGISTRO=?, CAN_NO_REPETIDO_CC=?, CAN_NOMBRE=?, CAN_PROGRAMA=?, CAN_SUPLENTE_NOMBRE=?, PRO_CODIGO=?, CAN_FOTO=?, CAN_SUPLENTE_RUTA_FOTO=?, CAN_PROPUESTA=?, CAN_TIENE_CALIDAD_ESTUDIANTE=?, CAN_TIENE_MITAD_CREDITOS=?, CAN_TIENE_PROMEDIO=?, CAN_TIPO=?, CAN_TIPO_INSCRIPCION=?, PRO_YEAR=? where can_codigo=?) clase   (CandidatoHibernateDAO.java)
prepareStatement(select candidato0_.can_codigo as can1_1_0_, candidato0_.CAN_ACEPTA_TERMINOS as CAN2_1_0_, candidato0_.CAN_CEDULA as CAN3_1_0_, candidato0_.CAN_PREVALIDADOR as CAN4_1_0_, candidato0_.CAN_SUPLENTE_CEDULA as CAN5_1_0_, candidato0_.CAN_VALIDADOR as CAN6_1_0_, candidato0_.CAN_CELULAR as CAN7_1_0_, candidato0_.CAN_CIUDAD_CEDULA as CAN8_1_0_, candidato0_.CAN_SUPLENTE_CIUDAD_CEDULA as CAN9_1_0_, candidato0_.CAN_CODIGO_PROGRAMA as CAN10_1_0_, candidato0_.CAN_CON_FALTAS as CAN11_1_0_, candidato0_.CAN_CON_GRUPO_INVESTIGACION as CAN12_1_0_, candidato0_.CAN_CON_TIEMPO_CONSECUTIVO as CAN13_1_0_, candidato0_.CAN_EMAIL_PERSONAL as CAN14_1_0_, candidato0_.CAN_EMAIL_UJTL as CAN15_1_0_, candidato0_.CAN_ES_AVALADO_DECANO as CAN16_1_0_, candidato0_.CAN_ES_NO_CONTRATISTA as CAN17_1_0_, candidato0_.CAN_ES_NO_REELEGIDO as CAN18_1_0_, candidato0_.CAN_ES_PROFESOR_DPTO as CAN19_1_0_, candidato0_.CAN_ES_PROFESOR_VINCULADO as CAN20_1_0_, candidato0_.CAN_ESTADO as CAN21_1_0_, candidato0_.CAN_FECHA_REGISTRO as CAN22_1_0_, candidato0_.CAN_NO_REPETIDO_CC as CAN23_1_0_, candidato0_.CAN_NOMBRE as CAN24_1_0_, candidato0_.CAN_PROGRAMA as CAN25_1_0_, candidato0_.CAN_SUPLENTE_NOMBRE as CAN26_1_0_, candidato0_.PRO_CODIGO as PRO27_1_0_, candidato0_.CAN_FOTO as CAN28_1_0_, candidato0_.CAN_SUPLENTE_RUTA_FOTO as CAN29_1_0_, candidato0_.CAN_PROPUESTA as CAN30_1_0_, candidato0_.CAN_TIENE_CALIDAD_ESTUDIANTE as CAN31_1_0_, candidato0_.CAN_TIENE_MITAD_CREDITOS as CAN32_1_0_, candidato0_.CAN_TIENE_PROMEDIO as CAN33_1_0_, candidato0_.CAN_TIPO as CAN34_1_0_, candidato0_.CAN_TIPO_INSCRIPCION as CAN35_1_0_, candidato0_.PRO_YEAR as PRO36_1_0_ from candidato candidato0_ where candidato0_.can_codigo=?) clase   (CandidatoHibernateDAO.java)
prepareStatement(select candidato0_.can_codigo as can1_1_, candidato0_.CAN_ACEPTA_TERMINOS as CAN2_1_, candidato0_.CAN_CEDULA as CAN3_1_, candidato0_.CAN_PREVALIDADOR as CAN4_1_, candidato0_.CAN_SUPLENTE_CEDULA as CAN5_1_, candidato0_.CAN_VALIDADOR as CAN6_1_, candidato0_.CAN_CELULAR as CAN7_1_, candidato0_.CAN_CIUDAD_CEDULA as CAN8_1_, candidato0_.CAN_SUPLENTE_CIUDAD_CEDULA as CAN9_1_, candidato0_.CAN_CODIGO_PROGRAMA as CAN10_1_, candidato0_.CAN_CON_FALTAS as CAN11_1_, candidato0_.CAN_CON_GRUPO_INVESTIGACION as CAN12_1_, candidato0_.CAN_CON_TIEMPO_CONSECUTIVO as CAN13_1_, candidato0_.CAN_EMAIL_PERSONAL as CAN14_1_, candidato0_.CAN_EMAIL_UJTL as CAN15_1_, candidato0_.CAN_ES_AVALADO_DECANO as CAN16_1_, candidato0_.CAN_ES_NO_CONTRATISTA as CAN17_1_, candidato0_.CAN_ES_NO_REELEGIDO as CAN18_1_, candidato0_.CAN_ES_PROFESOR_DPTO as CAN19_1_, candidato0_.CAN_ES_PROFESOR_VINCULADO as CAN20_1_, candidato0_.CAN_ESTADO as CAN21_1_, candidato0_.CAN_FECHA_REGISTRO as CAN22_1_, candidato0_.CAN_NO_REPETIDO_CC as CAN23_1_, candidato0_.CAN_NOMBRE as CAN24_1_, candidato0_.CAN_PROGRAMA as CAN25_1_, candidato0_.CAN_SUPLENTE_NOMBRE as CAN26_1_, candidato0_.PRO_CODIGO as PRO27_1_, candidato0_.CAN_FOTO as CAN28_1_, candidato0_.CAN_SUPLENTE_RUTA_FOTO as CAN29_1_, candidato0_.CAN_PROPUESTA as CAN30_1_, candidato0_.CAN_TIENE_CALIDAD_ESTUDIANTE as CAN31_1_, candidato0_.CAN_TIENE_MITAD_CREDITOS as CAN32_1_, candidato0_.CAN_TIENE_PROMEDIO as CAN33_1_, candidato0_.CAN_TIPO as CAN34_1_, candidato0_.CAN_TIPO_INSCRIPCION as CAN35_1_, candidato0_.PRO_YEAR as PRO36_1_ from candidato candidato0_ where candidato0_.PRO_CODIGO=? and candidato0_.CAN_CEDULA<>'-1' order by candidato0_.CAN_TIPO_INSCRIPCION, candidato0_.CAN_PROGRAMA, candidato0_.CAN_TIPO, candidato0_.CAN_NOMBRE) clase   (CandidatoHibernateDAO.java)
prepareStatement(insert into candidato (CAN_ACEPTA_TERMINOS, CAN_CEDULA, CAN_PREVALIDADOR, CAN_SUPLENTE_CEDULA, CAN_VALIDADOR, CAN_CELULAR, CAN_CIUDAD_CEDULA, CAN_SUPLENTE_CIUDAD_CEDULA, CAN_CODIGO_PROGRAMA, CAN_CON_FALTAS, CAN_CON_GRUPO_INVESTIGACION, CAN_CON_TIEMPO_CONSECUTIVO, CAN_EMAIL_PERSONAL, CAN_EMAIL_UJTL, CAN_ES_AVALADO_DECANO, CAN_ES_NO_CONTRATISTA, CAN_ES_NO_REELEGIDO, CAN_ES_PROFESOR_DPTO, CAN_ES_PROFESOR_VINCULADO, CAN_ESTADO, CAN_FECHA_REGISTRO, CAN_NO_REPETIDO_CC, CAN_NOMBRE, CAN_PROGRAMA, CAN_SUPLENTE_NOMBRE, PRO_CODIGO, CAN_FOTO, CAN_SUPLENTE_RUTA_FOTO, CAN_PROPUESTA, CAN_TIENE_CALIDAD_ESTUDIANTE, CAN_TIENE_MITAD_CREDITOS, CAN_TIENE_PROMEDIO, CAN_TIPO, CAN_TIPO_INSCRIPCION, PRO_YEAR, can_codigo) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)) clase   (CandidatoHibernateDAO.java)
prepareStatement(update candidato set CAN_ACEPTA_TERMINOS=?, CAN_CEDULA=?, CAN_PREVALIDADOR=?, CAN_SUPLENTE_CEDULA=?, CAN_VALIDADOR=?, CAN_CELULAR=?, CAN_CIUDAD_CEDULA=?, CAN_SUPLENTE_CIUDAD_CEDULA=?, CAN_CODIGO_PROGRAMA=?, CAN_CON_FALTAS=?, CAN_CON_GRUPO_INVESTIGACION=?, CAN_CON_TIEMPO_CONSECUTIVO=?, CAN_EMAIL_PERSONAL=?, CAN_EMAIL_UJTL=?, CAN_ES_AVALADO_DECANO=?, CAN_ES_NO_CONTRATISTA=?, CAN_ES_NO_REELEGIDO=?, CAN_ES_PROFESOR_DPTO=?, CAN_ES_PROFESOR_VINCULADO=?, CAN_ESTADO=?, CAN_FECHA_REGISTRO=?, CAN_NO_REPETIDO_CC=?, CAN_NOMBRE=?, CAN_PROGRAMA=?, CAN_SUPLENTE_NOMBRE=?, PRO_CODIGO=?, CAN_FOTO=?, CAN_SUPLENTE_RUTA_FOTO=?, CAN_PROPUESTA=?, CAN_TIENE_CALIDAD_ESTUDIANTE=?, CAN_TIENE_MITAD_CREDITOS=?, CAN_TIENE_PROMEDIO=?, CAN_TIPO=?, CAN_TIPO_INSCRIPCION=?, PRO_YEAR=? where can_codigo=?) clase   (CandidatoHibernateDAO.java)
prepareStatement(select candidato0_.can_codigo as can1_1_, candidato0_.CAN_ACEPTA_TERMINOS as CAN2_1_, candidato0_.CAN_CEDULA as CAN3_1_, candidato0_.CAN_PREVALIDADOR as CAN4_1_, candidato0_.CAN_SUPLENTE_CEDULA as CAN5_1_, candidato0_.CAN_VALIDADOR as CAN6_1_, candidato0_.CAN_CELULAR as CAN7_1_, candidato0_.CAN_CIUDAD_CEDULA as CAN8_1_, candidato0_.CAN_SUPLENTE_CIUDAD_CEDULA as CAN9_1_, candidato0_.CAN_CODIGO_PROGRAMA as CAN10_1_, candidato0_.CAN_CON_FALTAS as CAN11_1_, candidato0_.CAN_CON_GRUPO_INVESTIGACION as CAN12_1_, candidato0_.CAN_CON_TIEMPO_CONSECUTIVO as CAN13_1_, candidato0_.CAN_EMAIL_PERSONAL as CAN14_1_, candidato0_.CAN_EMAIL_UJTL as CAN15_1_, candidato0_.CAN_ES_AVALADO_DECANO as CAN16_1_, candidato0_.CAN_ES_NO_CONTRATISTA as CAN17_1_, candidato0_.CAN_ES_NO_REELEGIDO as CAN18_1_, candidato0_.CAN_ES_PROFESOR_DPTO as CAN19_1_, candidato0_.CAN_ES_PROFESOR_VINCULADO as CAN20_1_, candidato0_.CAN_ESTADO as CAN21_1_, candidato0_.CAN_FECHA_REGISTRO as CAN22_1_, candidato0_.CAN_NO_REPETIDO_CC as CAN23_1_, candidato0_.CAN_NOMBRE as CAN24_1_, candidato0_.CAN_PROGRAMA as CAN25_1_, candidato0_.CAN_SUPLENTE_NOMBRE as CAN26_1_, candidato0_.PRO_CODIGO as PRO27_1_, candidato0_.CAN_FOTO as CAN28_1_, candidato0_.CAN_SUPLENTE_RUTA_FOTO as CAN29_1_, candidato0_.CAN_PROPUESTA as CAN30_1_, candidato0_.CAN_TIENE_CALIDAD_ESTUDIANTE as CAN31_1_, candidato0_.CAN_TIENE_MITAD_CREDITOS as CAN32_1_, candidato0_.CAN_TIENE_PROMEDIO as CAN33_1_, candidato0_.CAN_TIPO as CAN34_1_, candidato0_.CAN_TIPO_INSCRIPCION as CAN35_1_, candidato0_.PRO_YEAR as PRO36_1_ from candidato candidato0_ where candidato0_.PRO_CODIGO=? and candidato0_.CAN_TIPO_INSCRIPCION=? and candidato0_.CAN_CODIGO_PROGRAMA=? and candidato0_.CAN_TIPO=? and candidato0_.CAN_CEDULA=?) clase   (CandidatoHibernateDAO.java)
prepareStatement( select identificacion as cedula, estudiantes as nombre, email as correo,  creditos_requeridos as creditosPrograma, creditos_conseguidos as creditosCursados,  promedio_acumulado as promedioAcumulado, codigo_programa as codigoProgActual, programa as programa, sede as sede,  nivel  from vie_datos_estudiantes where identificacion = ? ) clase   (EstudianteHibernateDAO.java)
prepareStatement(select evento0_.eve_codigo as eve1_2_0_, evento0_.eve_descripcion as eve2_2_0_ from evento evento0_ where evento0_.eve_codigo=?) clase   (EventoHibernateDAO.java)
prepareStatement(select evento0_.eve_codigo as eve1_2_0_, evento0_.eve_descripcion as eve2_2_0_ from evento evento0_ where evento0_.eve_codigo=?) clase   (EventoHibernateDAO.java)
prepareStatement(select evento0_.eve_codigo as eve1_2_0_, evento0_.eve_descripcion as eve2_2_0_ from evento evento0_ where evento0_.eve_codigo=?) clase   (EventoHibernateDAO.java)
prepareStatement(select evento0_.eve_codigo as eve1_2_0_, evento0_.eve_descripcion as eve2_2_0_ from evento evento0_ where evento0_.eve_codigo=?) clase   (EventoHibernateDAO.java)
prepareStatement(select evento0_.eve_codigo as eve1_2_0_, evento0_.eve_descripcion as eve2_2_0_ from evento evento0_ where evento0_.eve_codigo=?) clase   (EventoHibernateDAO.java)
prepareStatement(select evento0_.eve_codigo as eve1_2_0_, evento0_.eve_descripcion as eve2_2_0_ from evento evento0_ where evento0_.eve_codigo=?) clase   (EventoHibernateDAO.java)
prepareStatement(select evento0_.eve_codigo as eve1_2_0_, evento0_.eve_descripcion as eve2_2_0_ from evento evento0_ where evento0_.eve_codigo=?) clase   (EventoHibernateDAO.java)
prepareStatement(select evento0_.eve_codigo as eve1_2_0_, evento0_.eve_descripcion as eve2_2_0_ from evento evento0_ where evento0_.eve_codigo=?) clase   (EventoHibernateDAO.java)
prepareStatement( SELECT emp_cedula AS cedula, emp_cc_contable AS centroCosto, nombres AS nombre, cencos_nombre AS programa, emp_localidad AS sede, emp_email as correo  FROM vie_datos_trabajadores i  WHERE i.emp_cedula = ? ) clase   (FuncionarioHibernateDAO.java)
prepareStatement( select identificacion as cedula, estudiantes as nombre, email as correo,  creditos_requeridos as creditosPrograma, creditos_conseguidos as creditosCursados,  promedio_acumulado as promedioAcumulado, codigo_programa as codigoProgActual, programa as programa, sede as sede,  nivel  from vie_datos_estudiantes where identificacion = ? ) clase   (EstudianteHibernateDAO.java)
prepareStatement( SELECT emp_cedula AS cedula, emp_cc_contable AS centroCosto, nombres AS nombre, cencos_nombre AS programa, emp_localidad AS sede, emp_email as correo, ciudad_nombre as ciudadNacimiento  FROM vie_datos_profesores i  WHERE i.emp_cedula = ? ) clase   (ProfesorHibernateDAO.java)
prepareStatement( SELECT emp_cedula AS cedula, emp_cc_contable AS centroCosto, nombres AS nombre, cencos_nombre AS programa, emp_localidad AS sede, emp_email as correo  FROM vie_datos_trabajadores i  WHERE i.emp_cedula = ? ) clase   (FuncionarioHibernateDAO.java)
prepareStatement( SELECT RCE_ASOCIADO CODIGO, DES_CENTRO_COSTO NOMBRE FROM VIE_PROFESOR_PROGRAMA  WHERE emp_cedula = ? ) clase   (FuncionarioHibernateDAO.java)
prepareStatement( select identificacion as cedula, estudiantes as nombre, email as correo,  creditos_requeridos as creditosPrograma, creditos_conseguidos as creditosCursados,  promedio_acumulado as promedioAcumulado, codigo_programa as codigoProgActual, programa as programa, sede as sede,  nivel  from vie_datos_estudiantes where identificacion = ? ) clase   (EstudianteHibernateDAO.java)
prepareStatement( SELECT emp_cedula AS cedula, emp_cc_contable AS centroCosto, nombres AS nombre, cencos_nombre AS programa, emp_localidad AS sede, emp_email as correo, ciudad_nombre as ciudadNacimiento  FROM vie_datos_profesores i  WHERE i.emp_cedula = ? ) clase   (ProfesorHibernateDAO.java)
prepareStatement( SELECT emp_cedula AS cedula, emp_cc_contable AS centroCosto, nombres AS nombre, cencos_nombre AS programa, emp_localidad AS sede, emp_email as correo  FROM vie_datos_trabajadores i  WHERE i.emp_cedula = ? ) clase   (FuncionarioHibernateDAO.java)
prepareStatement( SELECT RCE_ASOCIADO CODIGO, DES_CENTRO_COSTO NOMBRE FROM VIE_PROFESOR_PROGRAMA  WHERE emp_cedula = ? ) clase   (FuncionarioHibernateDAO.java)
prepareStatement( select identificacion as cedula, estudiantes as nombre, email as correo,  creditos_requeridos as creditosPrograma, creditos_conseguidos as creditosCursados,  promedio_acumulado as promedioAcumulado, codigo_programa as codigoProgActual, programa as programa, sede as sede,  nivel  from vie_datos_estudiantes where identificacion = ? ) clase   (EstudianteHibernateDAO.java)
prepareStatement( SELECT emp_cedula AS cedula, emp_cc_contable AS centroCosto, nombres AS nombre, cencos_nombre AS programa, emp_localidad AS sede, emp_email as correo, ciudad_nombre as ciudadNacimiento  FROM vie_datos_profesores i  WHERE i.emp_cedula = ? ) clase   (ProfesorHibernateDAO.java)
prepareStatement( SELECT RCE_ASOCIADO CODIGO, DES_CENTRO_COSTO NOMBRE FROM VIE_PROFESOR_PROGRAMA  WHERE emp_cedula = ? ) clase   (ProfesorHibernateDAO.java)
prepareStatement( SELECT emp_cedula AS cedula, emp_cc_contable AS centroCosto, nombres AS nombre, cencos_nombre AS programa, emp_localidad AS sede, emp_email as correo  FROM vie_datos_trabajadores i  WHERE i.emp_cedula = ? ) clase   (FuncionarioHibernateDAO.java)
prepareStatement( select identificacion as cedula, estudiantes as nombre, email as correo,  creditos_requeridos as creditosPrograma, creditos_conseguidos as creditosCursados,  promedio_acumulado as promedioAcumulado, codigo_programa as codigoProgActual, programa as programa, sede as sede,  nivel  from vie_datos_estudiantes where identificacion = ? ) clase   (EstudianteHibernateDAO.java)
prepareStatement( SELECT emp_cedula AS cedula, emp_cc_contable AS centroCosto, nombres AS nombre, cencos_nombre AS programa, emp_localidad AS sede, emp_email as correo, ciudad_nombre as ciudadNacimiento  FROM vie_datos_profesores i  WHERE i.emp_cedula = ? ) clase   (ProfesorHibernateDAO.java)
prepareStatement( SELECT emp_cedula AS cedula, emp_cc_contable AS centroCosto, nombres AS nombre, cencos_nombre AS programa, emp_localidad AS sede, emp_email as correo  FROM vie_datos_trabajadores i  WHERE i.emp_cedula = ? ) clase   (FuncionarioHibernateDAO.java)
prepareStatement( select identificacion as cedula, estudiantes as nombre, email as correo,  creditos_requeridos as creditosPrograma, creditos_conseguidos as creditosCursados,  promedio_acumulado as promedioAcumulado, codigo_programa as codigoProgActual, programa as programa, sede as sede,  nivel  from vie_datos_estudiantes where identificacion = ? ) clase   (EstudianteHibernateDAO.java)
prepareStatement( SELECT emp_cedula AS cedula, emp_cc_contable AS centroCosto, nombres AS nombre, cencos_nombre AS programa, emp_localidad AS sede, emp_email as correo, ciudad_nombre as ciudadNacimiento  FROM vie_datos_profesores i  WHERE i.emp_cedula = ? ) clase   (ProfesorHibernateDAO.java)
prepareStatement( SELECT RCE_ASOCIADO CODIGO, DES_CENTRO_COSTO NOMBRE FROM VIE_PROFESOR_PROGRAMA  WHERE emp_cedula = ? ) clase   (ProfesorHibernateDAO.java)
prepareStatement( SELECT emp_cedula AS cedula, emp_cc_contable AS centroCosto, nombres AS nombre, cencos_nombre AS programa, emp_localidad AS sede, emp_email as correo  FROM vie_datos_trabajadores i  WHERE i.emp_cedula = ? ) clase   (FuncionarioHibernateDAO.java)
prepareStatement( select identificacion as cedula, estudiantes as nombre, email as correo,  creditos_requeridos as creditosPrograma, creditos_conseguidos as creditosCursados,  promedio_acumulado as promedioAcumulado, codigo_programa as codigoProgActual, programa as programa, sede as sede,  nivel  from vie_datos_estudiantes where identificacion = ? ) clase   (EstudianteHibernateDAO.java)
prepareStatement( SELECT emp_cedula AS cedula, emp_cc_contable AS centroCosto, nombres AS nombre, cencos_nombre AS programa, emp_localidad AS sede, emp_email as correo, ciudad_nombre as ciudadNacimiento  FROM vie_datos_profesores i  WHERE i.emp_cedula = ? ) clase   (ProfesorHibernateDAO.java)
prepareStatement( SELECT emp_cedula AS cedula, emp_cc_contable AS centroCosto, nombres AS nombre, cencos_nombre AS programa, emp_localidad AS sede, emp_email as correo  FROM vie_datos_trabajadores i  WHERE i.emp_cedula = ? ) clase   (FuncionarioHibernateDAO.java)
prepareStatement(insert into proceso_electoral (PRO_CA_ACTIVADO, PRO_CC_ACTIVADO, pro_estado, pro_fecha_creacion, pro_nombre, pro_padre_codigo, PRO_PROGIDS_CC, pro_resolucion_ca, pro_resolucion_ca_ruta, pro_resolucion_cc, pro_resolucion_cc_ruta, pro_vuelta, pro_year, pro_codigo) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)) clase   (ProcesoElectoralHibernateDAO.java)
prepareStatement(insert into proceso_evento (eve_codigo, fecha_final, fecha_inicial, pro_codigo, pe_codigo) values (?, ?, ?, ?, ?)) clase   (ProcesoElectoralHibernateDAO.java)
prepareStatement(insert into proceso_evento (eve_codigo, fecha_final, fecha_inicial, pro_codigo, pe_codigo) values (?, ?, ?, ?, ?)) clase   (ProcesoElectoralHibernateDAO.java)
prepareStatement(insert into proceso_electoral (PRO_CA_ACTIVADO, PRO_CC_ACTIVADO, pro_estado, pro_fecha_creacion, pro_nombre, pro_padre_codigo, PRO_PROGIDS_CC, pro_resolucion_ca, pro_resolucion_ca_ruta, pro_resolucion_cc, pro_resolucion_cc_ruta, pro_vuelta, pro_year, pro_codigo) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)) clase   (ProcesoElectoralHibernateDAO.java)
prepareStatement(select procesoele0_.pro_codigo as pro1_3_0_, procesoele0_.PRO_CA_ACTIVADO as PRO2_3_0_, procesoele0_.PRO_CC_ACTIVADO as PRO3_3_0_, procesoele0_.pro_estado as pro4_3_0_, procesoele0_.pro_fecha_creacion as pro5_3_0_, procesoele0_.pro_nombre as pro6_3_0_, procesoele0_.pro_padre_codigo as pro7_3_0_, procesoele0_.PRO_PROGIDS_CC as PRO8_3_0_, procesoele0_.pro_resolucion_ca as pro9_3_0_, procesoele0_.pro_resolucion_ca_ruta as pro10_3_0_, procesoele0_.pro_resolucion_cc as pro11_3_0_, procesoele0_.pro_resolucion_cc_ruta as pro12_3_0_, procesoele0_.pro_vuelta as pro13_3_0_, procesoele0_.pro_year as pro14_3_0_ from proceso_electoral procesoele0_ where procesoele0_.pro_codigo=?) clase   (ProcesoElectoralHibernateDAO.java)
prepareStatement(select procesoele0_.pro_codigo as pro1_3_0_, procesoele0_.PRO_CA_ACTIVADO as PRO2_3_0_, procesoele0_.PRO_CC_ACTIVADO as PRO3_3_0_, procesoele0_.pro_estado as pro4_3_0_, procesoele0_.pro_fecha_creacion as pro5_3_0_, procesoele0_.pro_nombre as pro6_3_0_, procesoele0_.pro_padre_codigo as pro7_3_0_, procesoele0_.PRO_PROGIDS_CC as PRO8_3_0_, procesoele0_.pro_resolucion_ca as pro9_3_0_, procesoele0_.pro_resolucion_ca_ruta as pro10_3_0_, procesoele0_.pro_resolucion_cc as pro11_3_0_, procesoele0_.pro_resolucion_cc_ruta as pro12_3_0_, procesoele0_.pro_vuelta as pro13_3_0_, procesoele0_.pro_year as pro14_3_0_ from proceso_electoral procesoele0_ where procesoele0_.pro_codigo=?) clase   (ProcesoElectoralHibernateDAO.java)
prepareStatement(select procesoeve0_.pe_codigo as pe1_4_, procesoeve0_.eve_codigo as eve2_4_, procesoeve0_.fecha_final as fecha3_4_, procesoeve0_.fecha_inicial as fecha4_4_, procesoeve0_.pro_codigo as pro5_4_ from proceso_evento procesoeve0_ where procesoeve0_.pro_codigo=?) clase   (ProcesoElectoralHibernateDAO.java)
prepareStatement(select this_.pro_codigo as pro1_3_0_, this_.PRO_CA_ACTIVADO as PRO2_3_0_, this_.PRO_CC_ACTIVADO as PRO3_3_0_, this_.pro_estado as pro4_3_0_, this_.pro_fecha_creacion as pro5_3_0_, this_.pro_nombre as pro6_3_0_, this_.pro_padre_codigo as pro7_3_0_, this_.PRO_PROGIDS_CC as PRO8_3_0_, this_.pro_resolucion_ca as pro9_3_0_, this_.pro_resolucion_ca_ruta as pro10_3_0_, this_.pro_resolucion_cc as pro11_3_0_, this_.pro_resolucion_cc_ruta as pro12_3_0_, this_.pro_vuelta as pro13_3_0_, this_.pro_year as pro14_3_0_ from proceso_electoral this_ order by this_.pro_fecha_creacion desc) clase   (ProcesoElectoralHibernateDAO.java)
prepareStatement(insert into candidato (CAN_ACEPTA_TERMINOS, CAN_CEDULA, CAN_PREVALIDADOR, CAN_SUPLENTE_CEDULA, CAN_VALIDADOR, CAN_CELULAR, CAN_CIUDAD_CEDULA, CAN_SUPLENTE_CIUDAD_CEDULA, CAN_CODIGO_PROGRAMA, CAN_CON_FALTAS, CAN_CON_GRUPO_INVESTIGACION, CAN_CON_TIEMPO_CONSECUTIVO, CAN_EMAIL_PERSONAL, CAN_EMAIL_UJTL, CAN_ES_AVALADO_DECANO, CAN_ES_NO_CONTRATISTA, CAN_ES_NO_REELEGIDO, CAN_ES_PROFESOR_DPTO, CAN_ES_PROFESOR_VINCULADO, CAN_ESTADO, CAN_FECHA_REGISTRO, CAN_NO_REPETIDO_CC, CAN_NOMBRE, CAN_PROGRAMA, CAN_SUPLENTE_NOMBRE, PRO_CODIGO, CAN_FOTO, CAN_SUPLENTE_RUTA_FOTO, CAN_PROPUESTA, CAN_TIENE_CALIDAD_ESTUDIANTE, CAN_TIENE_MITAD_CREDITOS, CAN_TIENE_PROMEDIO, CAN_TIPO, CAN_TIPO_INSCRIPCION, PRO_YEAR, can_codigo) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)) clase   (ProcesoElectoralHibernateDAO.java)
prepareStatement( select distinct  can_codigo_programa codigo, can_programa nombre , can_tipo  tipo  from candidato  where can_tipo_inscripcion = 'CC' and pro_codigo = ?  order by can_codigo_programa ) clase   (ProcesoElectoralHibernateDAO.java)
prepareStatement(delete from proceso_evento where pe_codigo=?) clase   (ProcesoElectoralHibernateDAO.java)
prepareStatement(delete from proceso_evento where pe_codigo=?) clase   (ProcesoElectoralHibernateDAO.java)
prepareStatement(delete from proceso_electoral where pro_codigo=?) clase   (ProcesoElectoralHibernateDAO.java)
prepareStatement(delete from proceso_electoral where pro_codigo=?) clase   (ProcesoElectoralHibernateDAO.java)
prepareStatement(insert into proceso_electoral (PRO_CA_ACTIVADO, PRO_CC_ACTIVADO, pro_estado, pro_fecha_creacion, pro_nombre, pro_padre_codigo, PRO_PROGIDS_CC, pro_resolucion_ca, pro_resolucion_ca_ruta, pro_resolucion_cc, pro_resolucion_cc_ruta, pro_vuelta, pro_year, pro_codigo) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)) clase   (ProcesoElectoralService.java)
prepareStatement(insert into proceso_evento (eve_codigo, fecha_final, fecha_inicial, pro_codigo, pe_codigo) values (?, ?, ?, ?, ?)) clase   (ProcesoElectoralService.java)
prepareStatement(insert into proceso_evento (eve_codigo, fecha_final, fecha_inicial, pro_codigo, pe_codigo) values (?, ?, ?, ?, ?)) clase   (ProcesoElectoralService.java)
prepareStatement(insert into proceso_evento (eve_codigo, fecha_final, fecha_inicial, pro_codigo, pe_codigo) values (?, ?, ?, ?, ?)) clase   (ProcesoElectoralService.java)
prepareStatement(insert into proceso_evento (eve_codigo, fecha_final, fecha_inicial, pro_codigo, pe_codigo) values (?, ?, ?, ?, ?)) clase   (ProcesoElectoralService.java)
prepareStatement(insert into proceso_evento (eve_codigo, fecha_final, fecha_inicial, pro_codigo, pe_codigo) values (?, ?, ?, ?, ?)) clase   (ProcesoElectoralService.java)
prepareStatement(insert into proceso_evento (eve_codigo, fecha_final, fecha_inicial, pro_codigo, pe_codigo) values (?, ?, ?, ?, ?)) clase   (ProcesoElectoralService.java)
prepareStatement(insert into proceso_evento (eve_codigo, fecha_final, fecha_inicial, pro_codigo, pe_codigo) values (?, ?, ?, ?, ?)) clase   (ProcesoElectoralService.java)
prepareStatement(insert into proceso_evento (eve_codigo, fecha_final, fecha_inicial, pro_codigo, pe_codigo) values (?, ?, ?, ?, ?)) clase   (ProcesoElectoralService.java)
prepareStatement(insert into auditoria (AU_CEDULA_ESTUDIANTE, AU_CEDULA_ACCION, AU_FECHA_CREACION, PRO_CODIGO, AU_TEXTO_ACCION, AU_TIPO, au_id) values (?, ?, ?, ?, ?, ?, ?)) clase   (ProcesoElectoralService.java)
prepareStatement(delete from proceso_evento where pe_codigo=?) clase   (ProcesoElectoralService.java)
prepareStatement(delete from proceso_evento where pe_codigo=?) clase   (ProcesoElectoralService.java)
prepareStatement(delete from proceso_evento where pe_codigo=?) clase   (ProcesoElectoralService.java)
prepareStatement(delete from proceso_evento where pe_codigo=?) clase   (ProcesoElectoralService.java)
prepareStatement(delete from proceso_evento where pe_codigo=?) clase   (ProcesoElectoralService.java)
prepareStatement(delete from proceso_evento where pe_codigo=?) clase   (ProcesoElectoralService.java)
prepareStatement(delete from proceso_evento where pe_codigo=?) clase   (ProcesoElectoralService.java)
prepareStatement(delete from proceso_evento where pe_codigo=?) clase   (ProcesoElectoralService.java)
prepareStatement(delete from proceso_electoral where pro_codigo=?) clase   (ProcesoElectoralService.java)
prepareStatement( select distinct  can_codigo_programa codigo, can_programa nombre , can_tipo  tipo  from candidato  where can_tipo_inscripcion = 'CC' and pro_codigo = ?  order by can_codigo_programa ) clase   (ProcesoElectoralHibernateDAO.java)
prepareStatement( select distinct  can_codigo_programa codigo, can_programa nombre , can_tipo  tipo  from candidato  where can_tipo_inscripcion = 'CC' and pro_codigo = ?  order by can_codigo_programa ) clase   (ProcesoElectoralHibernateDAO.java)
prepareStatement( select distinct  can_codigo_programa codigo, can_programa nombre , can_tipo  tipo  from candidato  where can_tipo_inscripcion = 'CC' and pro_codigo = ?  order by can_codigo_programa ) clase   (ProcesoElectoralHibernateDAO.java)
prepareStatement( select distinct  can_codigo_programa codigo, can_programa nombre , can_tipo  tipo  from candidato  where can_tipo_inscripcion = 'CC' and pro_codigo = ?  order by can_codigo_programa ) clase   (ProcesoElectoralHibernateDAO.java)
prepareStatement( SELECT emp_cedula AS cedula, emp_cc_contable AS centroCosto, nombres AS nombre, cencos_nombre AS programa, emp_localidad AS sede, emp_email as correo, ciudad_nombre as ciudadNacimiento  FROM vie_datos_profesores i  WHERE i.emp_cedula = ? ) clase   (ProfesorHibernateDAO.java)
prepareStatement( SELECT RCE_ASOCIADO CODIGO, DES_CENTRO_COSTO NOMBRE FROM VIE_PROFESOR_PROGRAMA  WHERE emp_cedula = ? ) clase   (ProfesorHibernateDAO.java)
prepareStatement(insert into registro_voto (CAN_CEDULA, CAN_CODIGO, CAN_COD_PROGRAMA, REG_TIPO, REG_FECHA_VOTO, PRO_CODIGO, REG_VOTACION_TIPO, REG_CEDULA_VOTANTE, REG_IP_HOST, REG_VOTANTE_TIPO, REG_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)) clase   (RegistroVotoHibernateDAO.java)
prepareStatement(select registrovo0_.REG_ID as REG1_5_, registrovo0_.CAN_CEDULA as CAN2_5_, registrovo0_.CAN_CODIGO as CAN3_5_, registrovo0_.CAN_COD_PROGRAMA as CAN4_5_, registrovo0_.REG_TIPO as REG5_5_, registrovo0_.REG_FECHA_VOTO as REG6_5_, registrovo0_.PRO_CODIGO as PRO7_5_, registrovo0_.REG_VOTACION_TIPO as REG8_5_, registrovo0_.REG_CEDULA_VOTANTE as REG9_5_, registrovo0_.REG_IP_HOST as REG10_5_, registrovo0_.REG_VOTANTE_TIPO as REG11_5_ from registro_voto registrovo0_ where registrovo0_.REG_CEDULA_VOTANTE=? and registrovo0_.REG_VOTANTE_TIPO=? and registrovo0_.PRO_CODIGO=? and registrovo0_.REG_VOTACION_TIPO=?) clase   (RegistroVotoHibernateDAO.java)
prepareStatement( select c.can_codigo_programa codigoPrograma, c.can_programa programa, c.can_tipo_inscripcion tipoInscripcion, c.can_tipo tipoCandidato,   c.can_nombre nombre, c.can_cedula cedula, c.can_suplente_nombre nombreSuplente, c.can_suplente_cedula cedulaSuplente,    NVL(subq.votos,0) votos     from candidato c   left join  (   select rv.can_codigo,  count(rv.can_codigo) votos from registro_voto rv    where rv.pro_codigo = ?        group by rv.can_codigo, rv.can_cedula, rv.reg_votante_tipo, rv.reg_votacion_tipo   )  subq   on c.can_codigo = subq.can_codigo   where c.pro_codigo = ?   and c.can_estado = 'SG'  order by c.can_programa,  c.can_tipo_inscripcion, c.can_tipo, votos desc  ) clase   (RegistroVotoHibernateDAO.java)
prepareStatement( select c.can_codigo_programa codigoPrograma, c.can_programa programa, c.can_tipo_inscripcion tipoInscripcion, c.can_tipo tipoCandidato,   c.can_nombre nombre, c.can_cedula cedula, c.can_suplente_nombre nombreSuplente, c.can_suplente_cedula cedulaSuplente,    NVL(subq.votos,0) votos     from candidato c   left join  (   select rv.can_codigo,  count(rv.can_codigo) votos from registro_voto rv    where rv.pro_codigo = ?        group by rv.can_codigo, rv.can_cedula, rv.reg_votante_tipo, rv.reg_votacion_tipo   )  subq   on c.can_codigo = subq.can_codigo   where c.pro_codigo = ?   and c.can_estado = 'SG'  and c.can_tipo = ? and c.can_tipo_inscripcion = 'CA'  order by c.can_programa,  c.can_tipo_inscripcion, c.can_tipo, votos desc  ) clase   (RegistroVotoHibernateDAO.java)
prepareStatement(insert into registro_voto (CAN_CEDULA, CAN_CODIGO, CAN_COD_PROGRAMA, REG_TIPO, REG_FECHA_VOTO, PRO_CODIGO, REG_VOTACION_TIPO, REG_CEDULA_VOTANTE, REG_IP_HOST, REG_VOTANTE_TIPO, REG_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)) clase   (RegistroVotoHibernateDAO.java)
prepareStatement(select registrovo0_.REG_ID as REG1_5_, registrovo0_.CAN_CEDULA as CAN2_5_, registrovo0_.CAN_CODIGO as CAN3_5_, registrovo0_.CAN_COD_PROGRAMA as CAN4_5_, registrovo0_.REG_TIPO as REG5_5_, registrovo0_.REG_FECHA_VOTO as REG6_5_, registrovo0_.PRO_CODIGO as PRO7_5_, registrovo0_.REG_VOTACION_TIPO as REG8_5_, registrovo0_.REG_CEDULA_VOTANTE as REG9_5_, registrovo0_.REG_IP_HOST as REG10_5_, registrovo0_.REG_VOTANTE_TIPO as REG11_5_ from registro_voto registrovo0_ where registrovo0_.REG_CEDULA_VOTANTE=? and registrovo0_.REG_VOTANTE_TIPO=? and registrovo0_.CAN_COD_PROGRAMA=? and registrovo0_.PRO_CODIGO=? and registrovo0_.REG_VOTACION_TIPO=?) clase   (RegistroVotoHibernateDAO.java)
prepareStatement( select c.can_codigo_programa codigoPrograma, c.can_programa programa, c.can_tipo_inscripcion tipoInscripcion, c.can_tipo tipoCandidato,   c.can_nombre nombre, c.can_cedula cedula, c.can_suplente_nombre nombreSuplente, c.can_suplente_cedula cedulaSuplente,    NVL(subq.votos,0) votos     from candidato c   left join  (   select rv.can_codigo,  count(rv.can_codigo) votos from registro_voto rv    where rv.pro_codigo = ?        group by rv.can_codigo, rv.can_cedula, rv.reg_votante_tipo, rv.reg_votacion_tipo   )  subq   on c.can_codigo = subq.can_codigo   where c.pro_codigo = ?   and c.can_estado = 'SG'  and c.can_codigo_programa = ? and c.can_tipo = ? and c.can_tipo_inscripcion = 'CC'  order by c.can_programa,  c.can_tipo_inscripcion, c.can_tipo, votos desc  ) clase   (RegistroVotoHibernateDAO.java)
prepareStatement(SELECT rc.rce_email FROM   ma_relacion_cencost rc WHERE  rc.rce_asociado = ? OR rc.cod_centro_costo = ? ) clase   (SecretariaProgramaHibernateDAO.java)
prepareStatement(SELECT rc.rce_email FROM   ma_relacion_cencost rc WHERE  rc.rce_asociado = ? OR rc.cod_centro_costo = ? ) clase   (SecretariaProgramaHibernateDAO.java)
prepareStatement(  SELECT identificacion cedula, nombre_funcionario nombre, rol  FROM secretaria_programa  WHERE identificacion = ? ) clase   (SecretariaProgramaHibernateDAO.java)